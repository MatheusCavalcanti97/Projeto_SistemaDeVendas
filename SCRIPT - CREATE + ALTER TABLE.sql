DROP TABLE IF EXISTS PESSOA CASCADE;
DROP TABLE IF EXISTS TELEFONE CASCADE;
DROP TABLE IF EXISTS CLIENTE CASCADE;
DROP TABLE IF EXISTS DEPARTAMENTO CASCADE;
DROP TABLE IF EXISTS FUNCIONARIO CASCADE;
DROP TABLE IF EXISTS DEPENDENTE CASCADE;
DROP TABLE IF EXISTS ESTOQUE CASCADE;
DROP TABLE IF EXISTS PRODUTO CASCADE;
DROP TABLE IF EXISTS COMPRA CASCADE;
DROP TABLE IF EXISTS ITEMCOMPRA CASCADE;
DROP TABLE IF EXISTS PAGAMENTO CASCADE;

CREATE TABLE PESSOA(
	CPFPESSOA VARCHAR(11),
	NOMEPESSOA VARCHAR(25) NOT NULL,
	SOBRENOMEPESSOA VARCHAR(50) NOT NULL,
	SEXO CHAR(1) NOT NULL, -- M - MARCULINO | F - FEMININO
	EMAIL VARCHAR(50) NOT NULL,
	DATANASCIMENTO DATE NOT NULL,
	NOMERUAEND VARCHAR(50) NOT NULL,
	NUMEROIMOVELEND VARCHAR(10) NOT NULL,
	CIDADEEND VARCHAR(30) NOT NULL,
	ESTADOEND VARCHAR(2) NOT NULL,
	CEPCIDADEEND VARCHAR(8) NOT NULL,
	
	CONSTRAINT PESSOA_CPF_PK PRIMARY KEY (CPFPESSOA)
);

CREATE TABLE TELEFONE(

	CPFPESSOA VARCHAR(11),
	NUMEROTELEFONE VARCHAR(12),
	
	CONSTRAINT TELEFONE_CPFPESSOA_PK PRIMARY KEY (CPFPESSOA, NUMEROTELEFONE),
	CONSTRAINT TELEFONE_CPF_PESSOA_FK FOREIGN KEY (CPFPESSOA) REFERENCES PESSOA(CPFPESSOA) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE CLIENTE(
	CPFCLIENTE VARCHAR(11),
	DATADECADASTRO DATE NOT NULL,
	
	CONSTRAINT CLIENTE_CPFCLIENTE_PK PRIMARY KEY (CPFCLIENTE),
	CONSTRAINT CLIENTE_CPFCLIENTE_FK FOREIGN KEY (CPFCLIENTE) REFERENCES PESSOA(CPFPESSOA) ON DELETE CASCADE ON UPDATE CASCADE
);


CREATE TABLE DEPARTAMENTO(
	CODDEPARTAMENTO SERIAL, 
	CPFFUNCIONARIOGERENTE VARCHAR(11),
	DESCRICAODEPARTAMENTO VARCHAR(30),
	DATAINICIOGERENCIA DATE,
	DATAFIMGERENCIA DATE,
	CONSTRAINT DEPARTAMENTO_CODDEPARTAMENTO_PK PRIMARY KEY (CODDEPARTAMENTO)
);

CREATE TABLE FUNCIONARIO(
	CPFFUNCIONARIO VARCHAR(11),
	CPFFUNCSUPERVISOR VARCHAR(11) NULL,
	MATRICULAFUNC VARCHAR(10) NOT NULL,
	CARGO VARCHAR(30) NOT NULL,
	SALARIOBRUTO DOUBLE PRECISION NOT NULL,
	GRATIFICACAO DOUBLE PRECISION NOT NULL, 
	DATAADMISSAO DATE NOT NULL,
	DATADEMISSAO DATE,
	CODDEPARTAMENTO INT DEFAULT -1, 
	DATAINICIODEPART DATE,
	DATAFIMDEPART DATE,
	
	CONSTRAINT FUNCIONARIO_CPF_PK PRIMARY KEY (CPFFUNCIONARIO),
	CONSTRAINT FUNCIONARIO_CPF_FK FOREIGN KEY (CPFFUNCIONARIO) REFERENCES PESSOA(CPFPESSOA) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FUNCIONARIO_CPFFUNCSUPERVISOR_FK FOREIGN KEY (CPFFUNCSUPERVISOR) REFERENCES FUNCIONARIO(CPFFUNCIONARIO) ON DELETE SET NULL ON UPDATE CASCADE
	
);


ALTER TABLE FUNCIONARIO
	ADD CONSTRAINT FUNCIONARIO_CODDEPARTAMENTO_FK FOREIGN KEY (CODDEPARTAMENTO) REFERENCES DEPARTAMENTO(CODDEPARTAMENTO) 
	ON DELETE 
	SET NULL 
	ON UPDATE CASCADE,
	ADD CONSTRAINT FUNCIONARIO_MATRICULA_UN UNIQUE (MATRICULAFUNC),
	ADD CONSTRAINT FUNCIONARIO_SALARIO_CK CHECK (SALARIOBRUTO >= 1320),
	ADD CONSTRAINT FUNCIONARIO_GRATIFICACAO_CK CHECK (GRATIFICACAO >= 0);
	
ALTER TABLE DEPARTAMENTO
	ADD CONSTRAINT DEPARTAMENTO_CPFFUNCIONARIO_FK FOREIGN KEY (CPFFUNCIONARIOGERENTE) REFERENCES FUNCIONARIO(CPFFUNCIONARIO) ON DELETE SET NULL ON UPDATE CASCADE;

CREATE TABLE DEPENDENTE(
	CODDEPENDENTE SERIAL,
	CPFFUNCIONARIO VARCHAR(11) NOT NULL,
	NOMEDEPENDENTE VARCHAR(70) NOT NULL,
	DATACADASTRO DATE NOT NULL,
	DATARETIRADA DATE,
	
	CONSTRAINT DEPENDENTE_COD_PK PRIMARY KEY (CODDEPENDENTE, CPFFUNCIONARIO),
	CONSTRAINT DEPENDENTE_CPFFUNCIONARIO_FK FOREIGN KEY (CPFFUNCIONARIO) REFERENCES FUNCIONARIO(CPFFUNCIONARIO) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE ESTOQUE (
	CODESTOQUE SERIAL,
	DESCRICAOESTOQUE VARCHAR(30) NOT NULL,
	DATAENTRADAPRODUTO DATE,
	QUANTIDADE INT DEFAULT 0,
	DATASAIDAPRODUTO DATE,
	
	CONSTRAINT ESTOQUE_CODESTOQUE_PK PRIMARY KEY (CODESTOQUE),
	CONSTRAINT ESTOQUE_QUANTIDADE_CK CHECK (QUANTIDADE >= 0)
);

CREATE TABLE PRODUTO(
	CODPRODUTO SERIAL,
	DESCRICAOPRODUTO VARCHAR(30),
	DISTRIBUIDORPRODUTO VARCHAR(30),
	FABRICANTEPRODUTO VARCHAR(30),
	DATAFABRICACAOPRODUTO DATE NOT NULL,
	DATAVALIDADEPRODUTO DATE NOT NULL, -- DESCRICAO TIPO 1 ANO, 2 ANOS E ASSIM SUCESSIVAMENTE.
	VALORDECOMPRA DOUBLE PRECISION NOT NULL DEFAULT 0,
	CODESTOQUE INT NOT NULL, 
	
	CONSTRAINT PRODUTO_CODPRODUTO_PK PRIMARY KEY (CODPRODUTO),
	CONSTRAINT PRODUTO_CODESTOQUE_FK FOREIGN KEY (CODESTOQUE) REFERENCES ESTOQUE(CODESTOQUE)ON DELETE SET NULL ON UPDATE CASCADE
	
);

CREATE TABLE COMPRA(
	NUMCUPOMFISCAL SERIAL,
	CPFCLIENTE VARCHAR(11) NOT NULL,
	CPFFUNCIONARIO VARCHAR(11) NOT NULL,
	VALORTOTAL DOUBLE PRECISION NOT NULL,
	DESCONTO DOUBLE PRECISION DEFAULT 0,
	
	CONSTRAINT COMPRA_NUMCUPOMFISCAL_PK PRIMARY KEY (NUMCUPOMFISCAL),
	CONSTRAINT COMPRA_CPFCLIENTE_FK FOREIGN KEY (CPFCLIENTE) REFERENCES CLIENTE(CPFCLIENTE) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT COMPRA_CPFFUNCIONARIO_FK FOREIGN KEY (CPFFUNCIONARIO) REFERENCES FUNCIONARIO(CPFFUNCIONARIO) ON DELETE CASCADE ON UPDATE CASCADE
);

ALTER TABLE COMPRA
	ADD CONSTRAINT COMPRA_VALORTOTAL_CK CHECK (VALORTOTAL > 0),
	ADD CONSTRAINT COMPRA_DESCONTO_CK CHECK (DESCONTO >= 0);

CREATE TABLE ITEMCOMPRA(
	CODPRODUTO SERIAL,
	NUMCUPOMFISCAL INT NOT NULL,
	QUANTIDADEITEM INT NOT NULL DEFAULT 0,
	
	CONSTRAINT ITEMCOMPRA_CODPRODUTO_AND_CODCOMPRA_PK PRIMARY KEY (CODPRODUTO, NUMCUPOMFISCAL),
	CONSTRAINT ITEMCOMPRA_CODPRODUTO_FK FOREIGN KEY (CODPRODUTO) REFERENCES PRODUTO(CODPRODUTO) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT ITEMCOMPRA_NUMCUPOMFISCAL_FK FOREIGN KEY (NUMCUPOMFISCAL) REFERENCES COMPRA(NUMCUPOMFISCAL) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT ITEMCOMPRA_QUANTIDADEITEM_CK CHECK (QUANTIDADEITEM > 0)
);

CREATE TABLE PAGAMENTO(
	CODPAGAMENTO SERIAL,
	NUMCUPOMFISCAL INT,
	DATAPAGAMENTO DATE NOT NULL,
	
	CONSTRAINT PAGAMENTO_PAGAMENTO_AND_COMPRA_PK PRIMARY KEY(CODPAGAMENTO, NUMCUPOMFISCAL),
	CONSTRAINT PAGAMENTO_NUMCUPOMFISCAL_FK FOREIGN KEY (NUMCUPOMFISCAL) REFERENCES COMPRA(NUMCUPOMFISCAL) ON DELETE CASCADE ON UPDATE CASCADE
);